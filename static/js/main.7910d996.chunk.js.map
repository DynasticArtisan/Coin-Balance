{"version":3,"sources":["App.js","index.js"],"names":["balance","require","csvHeaders","label","key","App","useState","coinsSet","setCoinsSet","error","setError","loading","setLoading","coin","setCoin","address","setAddress","addressData","setAddressData","useEffect","fetch","then","response","json","data","getBalance","e","a","preventDefault","console","log","address_type","balances","className","class","onChange","target","value","map","ticker","id","type","placeholder","onClick","length","border","wallet","filename","headers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wkBAGMA,EAAUC,EAAQ,KAClBC,EAAa,CACjB,CAAEC,MAAM,OAAQC,IAAI,QACpB,CAAED,MAAM,UAAWC,IAAI,WACvB,CAAED,MAAM,UAAWC,IAAI,YA+FVC,MA5Ff,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,oBAAS,GAAzC,mBAAQK,EAAR,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,MAAnC,mBAAQO,EAAR,KAAcC,EAAd,KACA,EAAgCR,mBAAS,IAAzC,mBAAQS,EAAR,KAAiBC,EAAjB,KACA,EAAwCV,mBAAS,IAAjD,mBAAQW,EAAR,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,MAAM,gEACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLhB,EAAYgB,EAAKF,eAEpB,IAIH,IAAMG,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBD,EAAEE,iBACFhB,GAAW,GAFM,kBAIIZ,EAAQe,EAASF,GAJrB,OAITW,EAJS,OAKfK,QAAQC,IAAIN,GACTA,EAAKf,MACNC,EAAS,2BAELG,EAAOW,EAAKO,aACZ/B,EAAUwB,EAAKQ,SAASnB,GAC5BK,EAAe,CAAC,CAACL,OAAME,UAASf,YAAlB,mBAA+BiB,KAC7CP,EAAS,OAZI,kDAefA,EAAS,EAAD,IAfO,QAiBjBE,GAAW,GAjBM,0DAAH,sDAoBhB,OACE,qBAAKqB,UAAU,MAAf,SACA,sBAAKA,UAAU,YAAf,UAEEtB,GAAW,qBAAKsB,UAAU,SAAf,SAAwB,sBAAKC,MAAM,aAAX,UAAwB,wBAAW,wBAAW,8BAGhFvB,GAAWF,GAAS,mBAAGwB,UAAU,QAAb,SAAsBxB,IAI7C,uBAAMwB,UAAU,OAAhB,UACI,yBAAQA,UAAU,eAAeE,SAAU,SAACT,GAAD,OAAOZ,EAAQY,EAAEU,OAAOC,QAAQA,MAAOxB,EAAlF,UACE,wBAAQwB,MAAO,KAAf,yBAEE9B,EAAS+B,KAAK,SAAAzB,GAAI,OAAI,iCAAuBA,EAAK0B,QAAf1B,EAAK2B,UAG5C,uBAAOC,KAAK,OAAOR,UAAU,gBAAgBE,SAAU,SAACT,GAAD,OAAOV,EAAWU,EAAEU,OAAOC,QAAQA,MAAOtB,EAAS2B,YAAY,uBACtH,uBAAOD,KAAK,SAASR,UAAU,eAAeU,QAASlB,EAAYY,MAAM,mBAKzEpB,EAAY2B,OAAO,GAAK,sBAAKX,UAAU,UAAf,UACtB,wBAAOY,OAAQ,EAAf,UACE,+BACE,sCACA,gDACA,oDAIF5B,EAAYqB,KAAK,SAAAQ,GAAM,OAAI,+BACC,6BAAKA,EAAOjC,OACZ,6BAAKiC,EAAO/B,UACZ,6BAAK+B,EAAO9C,YAHJ8C,EAAO/B,eAQ7C,cAAC,UAAD,CAASkB,UAAU,WAAWc,SAAS,UAAUC,QAAS9C,EAAYsB,KAAMP,EAA5E,mCCrFVgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7910d996.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { CSVLink} from 'react-csv';\nconst balance = require('crypto-balances-2')\nconst csvHeaders = [\n  { label:\"Coin\", key:\"coin\"},\n  { label:\"Address\", key:\"address\"},\n  { label:\"Balance\", key:\"balance\"},\n]\n\nfunction App() {\n  const [coinsSet, setCoinsSet] = useState([])\n  const [error, setError] = useState('')\n  const [ loading, setLoading ] = useState(false)\n  const [ coin, setCoin ] = useState(null)\n  const [ address, setAddress ] = useState('')\n  const [ addressData, setAddressData ] = useState([])\n\n  useEffect(() => {\n    fetch('https://api.coinsocialstory.com/api/v1/currencies/all-ticker')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setCoinsSet(data.response)\n      });\n  }, [])\n\n\n\n  const getBalance = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    try {\n      const data = await balance(address, coin)\n      console.log(data)\n      if(data.error){\n        setError('Such address not found')\n      } else {\n        let coin = data.address_type\n        let balance = data.balances[coin]\n        setAddressData([{coin, address, balance}, ...addressData])\n        setError(null)\n      }\n    } catch (error) {\n      setError(error)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <div className=\"App\">\n    <div className=\"container\">\n    {\n      loading && <div className=\"loader\"><div class=\"css-loader\"><div></div><div></div><div></div></div></div> \n    }\n    {\n      !loading && error && <p className=\"error\">{error}</p>\n    }\n\n\n    <form className=\"form\">\n        <select className=\"form__select\" onChange={(e) => setCoin(e.target.value)} value={coin}>\n          <option value={null}>Choose coin</option>\n          {\n            coinsSet.map( coin => <option key={coin.id}>{coin.ticker}</option> )\n          } \n        </select>\n        <input type=\"text\" className=\"form__address\" onChange={(e) => setAddress(e.target.value)} value={address} placeholder=\"Enter your address\" />\n        <input type=\"submit\" className=\"form__submit\" onClick={getBalance} value=\"Get Balance\" />\n      </form>\n\n        \n      {\n        addressData.length>0 && <div className=\"wallets\">\n          <table border={1}>\n            <tr>\n              <th>Coin</th>\n              <th>Wallet address</th>\n              <th>Current balance</th>\n            </tr>\n\n          {  \n            addressData.map( wallet => <tr key={wallet.address}>\n                                        <td>{wallet.coin}</td>\n                                        <td>{wallet.address}</td>\n                                        <td>{wallet.balance}</td>\n                                      </tr> )\n          }\n          </table>   \n\n          <CSVLink className=\"download\" filename=\"balance\" headers={csvHeaders} data={addressData}>Download CSV</CSVLink>\n        </div>\n      }\n\n\n    </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}